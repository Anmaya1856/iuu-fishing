# -*- coding: utf-8 -*-
"""Identify_Ocean.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eMkFwX8fn5xgtDips7zOBLKg17jDIA1t
"""

!pip install geojson

from shapely.geometry import Point, Polygon, shape
import pandas as pd
import geojson
from shapely.geometry import Point, MultiPolygon
import re
import pandas as pd

import io
 
df = pd.read_csv("ais_disabling_events_final_modified_6.csv")
print(df.head())

with open('arctic.json') as f:
    arctic = geojson.load(f)
with open('atlantic.json') as f:
    atlantic = geojson.load(f)
with open('baltic.json') as f:
    baltic = geojson.load(f)
with open('indian.json') as f:
    indian = geojson.load(f)
with open('mediterranean.json') as f:
    mediterranean = geojson.load(f)
with open('pacific.json') as f:
    pacific = geojson.load(f)
with open('southChina.json') as f:
    southChina = geojson.load(f)
with open('southern.json') as f:
    southern = geojson.load(f)

from shapely.geometry import Point, Polygon

ocean_list = []
exact_name = []
count = 0
falseCount = 0

def identify_ocean(longitude, latitude):
    # Creating a Shapely point from the longitude and latitude (first long then lat VERY IMP)
    point = Point(longitude, latitude)
    global count 
    count = count + 1
    print(count)

    # Iterating through the features in the GeoJSON file
    for feature in atlantic['features']:
        if Point(point).within(Polygon(feature['geometry']['coordinates'][0][0])):
            print("atlantic")
            ocean_list.append("atlantic")
            exact_name.append(feature['properties']['name'])
            return True
    
    for feature in pacific['features']:
        if Point(point).within(Polygon(feature['geometry']['coordinates'][0][0])):
            print("pacific")
            ocean_list.append("pacific")
            exact_name.append(feature['properties']['name'])
            return True

    for feature in indian['features']:
        if Point(point).within(Polygon(feature['geometry']['coordinates'][0][0])):
            print("indian")
            ocean_list.append("indian")
            exact_name.append(feature['properties']['name'])
            return True

    for feature in arctic['features']:
        # Checking if the point is within the polygon defined by the feature
        if Point(point).within(Polygon(feature['geometry']['coordinates'][0][0])):
            print("arctic")
            ocean_list.append("arctic")
            exact_name.append(feature['properties']['name'])
            return True
    
    for feature in baltic['features']:
        if Point(point).within(Polygon(feature['geometry']['coordinates'][0][0])):
            print("baltic")
            ocean_list.append("baltic")
            exact_name.append(feature['properties']['name'])
            return True
    
    for feature in mediterranean['features']:
        if Point(point).within(Polygon(feature['geometry']['coordinates'][0][0])):
            print("mediterranean")
            ocean_list.append("mediterranean")
            exact_name.append(feature['properties']['name'])
            return True

    for feature in southChina['features']:
        if Point(point).within(Polygon(feature['geometry']['coordinates'][0][0])):
            print("southChina")
            ocean_list.append("southChina")
            exact_name.append(feature['properties']['name'])
            return True

    for feature in southern['features']:
        if Point(point).within(Polygon(feature['geometry']['coordinates'][0][0])):
            print("southern")
            ocean_list.append("southern")
            exact_name.append(feature['properties']['name'])
            return True

    # If point is in none of the oceans return false
    return False

# make list of all the lat and long of all the ais disabling events
gap_start_lat = df['gap_start_lat'].tolist()
gap_start_lon = df['gap_start_lon'].tolist()

for i in range(7000):
    temp = identify_ocean(gap_start_lon[i], gap_start_lat[i])
    if not temp:
        falseCount = falseCount + 1
        ocean_list.append("false")
        exact_name.append("false")
        print("False Count = ",falseCount, " Long = " ,gap_start_lon[i], " Lat = ", gap_start_lat[i])

print(ocean_list[:5])

import pandas as pd

column_name = "ocean"

df = pd.DataFrame(ocean_list, columns = [column_name])
df.head()

df.to_csv("ocean_list_6.csv")

column_name = "exact_name"

df = pd.DataFrame(exact_name, columns = [column_name])
df.head()

df.to_csv("exact_name_6.csv")

from google.colab import files
files.download("ocean_list_6.csv")
files.download("exact_name_6.csv")